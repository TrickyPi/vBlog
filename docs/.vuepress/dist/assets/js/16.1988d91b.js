(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{261:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js堆和栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js堆和栈"}},[t._v("#")]),t._v(" js堆和栈")]),t._v(" "),s("p",[t._v("堆和栈其实是一种逻辑结构，是一种抽象概念，依赖于物理结构（数组，链表）；而物理结构是内存中实实在在的存储结构；")]),t._v(" "),s("h2",{attrs:{id:"v8引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎"}},[t._v("#")]),t._v(" v8引擎")]),t._v(" "),s("p",[t._v("v8引擎由两个主要部分组成，内存堆（memory heap）和执行栈（call stack）；")]),t._v(" "),s("h2",{attrs:{id:"执行栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[t._v("#")]),t._v(" 执行栈")]),t._v(" "),s("p",[t._v("//红宝书 P73\n全局执行环境是最外围的一个执行环境。根据ECMAScript实现所在的宿主环境不同，表示执行环境的对象也不一样。在web浏览器中，全局执行环境被认为是window对象；（全局执行环境直到应用程序推出-例如关闭网页或浏览器-时才会被销毁）")]),t._v(" "),s("p",[t._v("每一个函数都会有自己的执行环境（execution context）。当执行流进入一个函数时；函数的执行环境就会被推入一个环境栈中。而在函数执行之后，栈将其环境弹出，把控制权返回给之前的执行环境")]),t._v(" "),s("p",[t._v("我认为这个环境栈就是我们常说的执行栈；执行栈的底部就是全局执行环境；")]),t._v(" "),s("h2",{attrs:{id:"内存堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存堆"}},[t._v("#")]),t._v(" 内存堆")]),t._v(" "),s("p",[t._v("至于变量存储中的基本数据类型存储方式和引用数据类型存储方式其实上都是一种内存分配（memory allocation）行为；引用数据类型的指针(变量标识符&指针值)和基本数据类型（变量标识符&值）存储在栈内存里，引用数据类型的值存储在堆内存里面；栈内存和执行栈是完全不同的概念；")])])}),[],!1,null,null,null);a.default=r.exports}}]);